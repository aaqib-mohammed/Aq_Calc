{
	"info": {
		"_postman_id": "3b16a866-d567-405b-9cde-d69cc7bfca8e",
		"name": "Calculator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "add",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Success - 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Convert String to Integer - we need add '+' \r",
							"let a = +pm.environment.get(\"intA\");\r",
							"let b = +pm.environment.get(\"intB\");\r",
							"let sum = a + b ; \r",
							"\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"var addResult = +jsonObject['soap:Envelope']['soap:Body']['AddResponse']['AddResult'];\r",
							"\r",
							"if (addResult === sum){\r",
							"    tests[\"Addition of two number: \" + a + \" plus \" +  b + \" is \" + sum] = true;\r",
							"}else{\r",
							"    tests[\"Addition of two number: \" + a + \" plus \" +  b + \".Excepted \" + sum + \" but the value is \" + addResult] = false;\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/*let a = _.random(-10, 100)\r",
							"pm.environment.set(\"intA\", a);\r",
							"\r",
							"let b = _.random(-5,-50)\r",
							"pm.environment.set(\"intB\", b);*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:Add>\r\n         <tem:intA>{{intA}}</tem:intA>\r\n         <tem:intB>{{intB}}</tem:intB>\r\n      </tem:Add>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n"
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "sub",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let a = +pm.environment.get(\"intA\");\r",
							"let b = +pm.environment.get(\"intB\");\r",
							"let sub = a - b;\r",
							"\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"var subresult = +jsonObject['soap:Envelope']['soap:Body']['SubtractResponse']['SubtractResult'];\r",
							"/*\r",
							"if (subresult === sub){\r",
							"    tests[\"Sub of two numbers: \" + a + \"minus\" + b + \"is\" + sub] = true;\r",
							"}\r",
							"    else{ tests[\"Sub of two numbers: \"+ a +\"minus\"+ b +\"is expected\"+ sub+ \"but the value */\r",
							"\r",
							"\r",
							"    tests[\"Subtraction of two number: \" + a + \" minus \" +  b + \" is \" + sub + \"|\" + subresult] =  (subresult === sub);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:Subtract>\r\n         <tem:intA>{{intA}}</tem:intA>\r\n         <tem:intB>{{intB}}</tem:intB>\r\n      </tem:Subtract>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n"
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "multi",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let a = +pm.variables.get(\"intA\");\r",
							"let b = +pm.variables.get(\"intB\");\r",
							"let mul = a*b;\r",
							"\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"var mulresult = +jsonObject ['soap:Envelope']['soap:Body']['MultiplyResponse']['MultiplyResult'];\r",
							"/*if (mulresult === mul){\r",
							"    tests[\"multiplication of two number: \" + a + \" plus \" +  b + \" is \" + mul] = true;\r",
							"}else{\r",
							"    tests[\"Addition of two number: \" + a + \" plus \" +  b + \".Excepted \" + mul + \" but the value is \" + mulresult] = false;\r",
							"}*\\\r",
							"\r",
							"tests[\"Multiplication of two number: \" + a + \" multiplied \" +  b + \" is \" + mul + \"|\" + mulresult] =  (mulresult === mul);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let a = _.random(-10, 100)\r",
							"pm.environment.set(\"intA\", a);\r",
							"\r",
							"let b = _.random(-5,-50)\r",
							"pm.environment.set(\"intB\", b);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:Multiply>\r\n         <tem:intA>{{intA}}</tem:intA>\r\n         <tem:intB>{{intB}}</tem:intB>\r\n      </tem:Multiply>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "div",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"let a = +pm.variables.get(\"intA\");\r",
							"let b = +pm.variables.get(\"intB\");\r",
							"let div = Math.round(a/b);\r",
							"\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"var divresult = +jsonObject['soap:Envelope']['soap:Body']['DivideResponse']['DivideResult'];\r",
							"/*if (divresult === div){\r",
							"    tests[\"div of two nubers: \"+a + \"divided by\" + b + \"is\" + div] = true;\r",
							"}\r",
							"else{\r",
							"    tests[\"div of two numbers: \" + a + \"divided by\" + b +\"expected\" + div + \"but the value is\" + divresult] = false;\r",
							"}*/\r",
							"tests[\"Division of two number: \" + a + \" divided \" +  b + \" is \" + div + \"|\" + divresult] =  (divresult === div);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let a = _.random(-10, 100)\r",
							"pm.environment.set(\"intA\", a);\r",
							"\r",
							"let b = _.random(-5,-50)\r",
							"pm.environment.set(\"intB\", b);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:Divide>\r\n         <tem:intA>{{intA}}</tem:intA>\r\n         <tem:intB>{{intB}}</tem:intB>\r\n      </tem:Divide>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n\r\n"
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		}
	]
}